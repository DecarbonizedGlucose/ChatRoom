// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: message.proto
// Protobuf C++ Version: 6.31.1

#include "message.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chat {

inline constexpr FilePayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        file_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_size_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR FilePayload::FilePayload(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FilePayload_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FilePayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilePayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilePayloadDefaultTypeInternal() {}
  union {
    FilePayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilePayloadDefaultTypeInternal _FilePayload_default_instance_;

inline constexpr ChatMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receiver_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_{nullptr},
        timestamp_{::int64_t{0}},
        pin_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ChatMessage::ChatMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChatMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChatMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChatMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChatMessageDefaultTypeInternal() {}
  union {
    ChatMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChatMessageDefaultTypeInternal _ChatMessage_default_instance_;
}  // namespace chat
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_message_2eproto = nullptr;
const ::uint32_t
    TableStruct_message_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::chat::FilePayload, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::chat::FilePayload, _impl_.file_name_),
        PROTOBUF_FIELD_OFFSET(::chat::FilePayload, _impl_.file_size_),
        PROTOBUF_FIELD_OFFSET(::chat::FilePayload, _impl_.file_hash_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::chat::ChatMessage, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::chat::ChatMessage, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::chat::ChatMessage, _impl_.receiver_),
        PROTOBUF_FIELD_OFFSET(::chat::ChatMessage, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::chat::ChatMessage, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::chat::ChatMessage, _impl_.pin_),
        PROTOBUF_FIELD_OFFSET(::chat::ChatMessage, _impl_.payload_),
        0,
        1,
        4,
        2,
        5,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::chat::FilePayload)},
        {9, sizeof(::chat::ChatMessage)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::chat::_FilePayload_default_instance_._instance,
    &::chat::_ChatMessage_default_instance_._instance,
};
const char descriptor_table_protodef_message_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rmessage.proto\022\004chat\"F\n\013FilePayload\022\021\n\t"
    "file_name\030\001 \001(\t\022\021\n\tfile_size\030\002 \001(\003\022\021\n\tfi"
    "le_hash\030\003 \001(\t\"\201\001\n\013ChatMessage\022\016\n\006sender\030"
    "\001 \001(\t\022\020\n\010receiver\030\002 \001(\t\022\021\n\ttimestamp\030\003 \001"
    "(\003\022\014\n\004text\030\004 \001(\t\022\013\n\003pin\030\005 \001(\010\022\"\n\007payload"
    "\030\006 \001(\0132\021.chat.FilePayloadb\006proto3"
};
static ::absl::once_flag descriptor_table_message_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false,
    false,
    233,
    descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_message_2eproto::offsets,
    file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};
namespace chat {
// ===================================================================

class FilePayload::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FilePayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FilePayload, _impl_._has_bits_);
};

FilePayload::FilePayload(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FilePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.FilePayload)
}
PROTOBUF_NDEBUG_INLINE FilePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::chat::FilePayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        file_name_(arena, from.file_name_),
        file_hash_(arena, from.file_hash_) {}

FilePayload::FilePayload(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FilePayload& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FilePayload_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FilePayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.file_size_ = from._impl_.file_size_;

  // @@protoc_insertion_point(copy_constructor:chat.FilePayload)
}
PROTOBUF_NDEBUG_INLINE FilePayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        file_name_(arena),
        file_hash_(arena) {}

inline void FilePayload::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.file_size_ = {};
}
FilePayload::~FilePayload() {
  // @@protoc_insertion_point(destructor:chat.FilePayload)
  SharedDtor(*this);
}
inline void FilePayload::SharedDtor(MessageLite& self) {
  FilePayload& this_ = static_cast<FilePayload&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.file_name_.Destroy();
  this_._impl_.file_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FilePayload::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FilePayload(arena);
}
constexpr auto FilePayload::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FilePayload),
                                            alignof(FilePayload));
}
constexpr auto FilePayload::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FilePayload_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FilePayload::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FilePayload>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FilePayload::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FilePayload>(), &FilePayload::ByteSizeLong,
              &FilePayload::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FilePayload, _impl_._cached_size_),
          false,
      },
      &FilePayload::kDescriptorMethods,
      &descriptor_table_message_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FilePayload_class_data_ =
        FilePayload::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FilePayload::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FilePayload_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FilePayload_class_data_.tc_table);
  return FilePayload_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2>
FilePayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FilePayload, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FilePayload_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::FilePayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string file_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FilePayload, _impl_.file_name_)}},
    // int64 file_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FilePayload, _impl_.file_size_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(FilePayload, _impl_.file_size_)}},
    // string file_hash = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(FilePayload, _impl_.file_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string file_name = 1;
    {PROTOBUF_FIELD_OFFSET(FilePayload, _impl_.file_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 file_size = 2;
    {PROTOBUF_FIELD_OFFSET(FilePayload, _impl_.file_size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string file_hash = 3;
    {PROTOBUF_FIELD_OFFSET(FilePayload, _impl_.file_hash_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\11\0\11\0\0\0\0"
    "chat.FilePayload"
    "file_name"
    "file_hash"
  }},
};
PROTOBUF_NOINLINE void FilePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.FilePayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.file_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.file_hash_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.file_size_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FilePayload::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FilePayload& this_ = static_cast<const FilePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FilePayload::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FilePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chat.FilePayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string file_name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_file_name().empty()) {
      const ::std::string& _s = this_._internal_file_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.FilePayload.file_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int64 file_size = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_file_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_file_size(), target);
    }
  }

  // string file_hash = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_file_hash().empty()) {
      const ::std::string& _s = this_._internal_file_hash();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.FilePayload.file_hash");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.FilePayload)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FilePayload::ByteSizeLong(const MessageLite& base) {
  const FilePayload& this_ = static_cast<const FilePayload&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FilePayload::ByteSizeLong() const {
  const FilePayload& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chat.FilePayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string file_name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_file_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_file_name());
      }
    }
    // string file_hash = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_file_hash().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_file_hash());
      }
    }
    // int64 file_size = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_file_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_file_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FilePayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FilePayload*>(&to_msg);
  auto& from = static_cast<const FilePayload&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.FilePayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_file_name().empty()) {
        _this->_internal_set_file_name(from._internal_file_name());
      } else {
        if (_this->_impl_.file_name_.IsDefault()) {
          _this->_internal_set_file_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_file_hash().empty()) {
        _this->_internal_set_file_hash(from._internal_file_hash());
      } else {
        if (_this->_impl_.file_hash_.IsDefault()) {
          _this->_internal_set_file_hash("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_file_size() != 0) {
        _this->_impl_.file_size_ = from._impl_.file_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FilePayload::CopyFrom(const FilePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.FilePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FilePayload::InternalSwap(FilePayload* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_name_, &other->_impl_.file_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_hash_, &other->_impl_.file_hash_, arena);
  swap(_impl_.file_size_, other->_impl_.file_size_);
}

::google::protobuf::Metadata FilePayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChatMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChatMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_._has_bits_);
};

ChatMessage::ChatMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChatMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.ChatMessage)
}
PROTOBUF_NDEBUG_INLINE ChatMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::chat::ChatMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sender_(arena, from.sender_),
        receiver_(arena, from.receiver_),
        text_(arena, from.text_) {}

ChatMessage::ChatMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChatMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChatMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChatMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.payload_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, pin_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::pin_));

  // @@protoc_insertion_point(copy_constructor:chat.ChatMessage)
}
PROTOBUF_NDEBUG_INLINE ChatMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        sender_(arena),
        receiver_(arena),
        text_(arena) {}

inline void ChatMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, payload_),
           0,
           offsetof(Impl_, pin_) -
               offsetof(Impl_, payload_) +
               sizeof(Impl_::pin_));
}
ChatMessage::~ChatMessage() {
  // @@protoc_insertion_point(destructor:chat.ChatMessage)
  SharedDtor(*this);
}
inline void ChatMessage::SharedDtor(MessageLite& self) {
  ChatMessage& this_ = static_cast<ChatMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sender_.Destroy();
  this_._impl_.receiver_.Destroy();
  this_._impl_.text_.Destroy();
  delete this_._impl_.payload_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChatMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChatMessage(arena);
}
constexpr auto ChatMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChatMessage),
                                            alignof(ChatMessage));
}
constexpr auto ChatMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChatMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChatMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChatMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChatMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChatMessage>(), &ChatMessage::ByteSizeLong,
              &ChatMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_._cached_size_),
          false,
      },
      &ChatMessage::kDescriptorMethods,
      &descriptor_table_message_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChatMessage_class_data_ =
        ChatMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChatMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChatMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChatMessage_class_data_.tc_table);
  return ChatMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 43, 2>
ChatMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChatMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::ChatMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sender = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.sender_)}},
    // string receiver = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.receiver_)}},
    // int64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChatMessage, _impl_.timestamp_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.timestamp_)}},
    // string text = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.text_)}},
    // bool pin = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChatMessage, _impl_.pin_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.pin_)}},
    // .chat.FilePayload payload = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.payload_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string sender = 1;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.sender_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string receiver = 2;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.receiver_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.timestamp_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string text = 4;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.text_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool pin = 5;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.pin_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .chat.FilePayload payload = 6;
    {PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.payload_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::chat::FilePayload>()},
  }},
  {{
    "\20\6\10\0\4\0\0\0"
    "chat.ChatMessage"
    "sender"
    "receiver"
    "text"
  }},
};
PROTOBUF_NOINLINE void ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ChatMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.sender_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.receiver_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.payload_ != nullptr);
      _impl_.payload_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pin_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.pin_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChatMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChatMessage& this_ = static_cast<const ChatMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChatMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChatMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:chat.ChatMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sender = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_sender().empty()) {
      const ::std::string& _s = this_._internal_sender();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.ChatMessage.sender");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string receiver = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_receiver().empty()) {
      const ::std::string& _s = this_._internal_receiver();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.ChatMessage.receiver");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 timestamp = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_timestamp(), target);
    }
  }

  // string text = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_text().empty()) {
      const ::std::string& _s = this_._internal_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.ChatMessage.text");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bool pin = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_pin() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_pin(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .chat.FilePayload payload = 6;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.payload_, this_._impl_.payload_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ChatMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChatMessage::ByteSizeLong(const MessageLite& base) {
  const ChatMessage& this_ = static_cast<const ChatMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChatMessage::ByteSizeLong() const {
  const ChatMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:chat.ChatMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string sender = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_sender().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sender());
      }
    }
    // string receiver = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_receiver().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_receiver());
      }
    }
    // string text = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_text());
      }
    }
    // .chat.FilePayload payload = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_);
    }
    // int64 timestamp = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
    // bool pin = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_pin() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChatMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChatMessage*>(&to_msg);
  auto& from = static_cast<const ChatMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.ChatMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_sender().empty()) {
        _this->_internal_set_sender(from._internal_sender());
      } else {
        if (_this->_impl_.sender_.IsDefault()) {
          _this->_internal_set_sender("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_receiver().empty()) {
        _this->_internal_set_receiver(from._internal_receiver());
      } else {
        if (_this->_impl_.receiver_.IsDefault()) {
          _this->_internal_set_receiver("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_text().empty()) {
        _this->_internal_set_text(from._internal_text());
      } else {
        if (_this->_impl_.text_.IsDefault()) {
          _this->_internal_set_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.payload_ != nullptr);
      if (_this->_impl_.payload_ == nullptr) {
        _this->_impl_.payload_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_);
      } else {
        _this->_impl_.payload_->MergeFrom(*from._impl_.payload_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_pin() != 0) {
        _this->_impl_.pin_ = from._impl_.pin_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChatMessage::CopyFrom(const ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChatMessage::InternalSwap(ChatMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.receiver_, &other->_impl_.receiver_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.pin_)
      + sizeof(ChatMessage::_impl_.pin_)
      - PROTOBUF_FIELD_OFFSET(ChatMessage, _impl_.payload_)>(
          reinterpret_cast<char*>(&_impl_.payload_),
          reinterpret_cast<char*>(&other->_impl_.payload_));
}

::google::protobuf::Metadata ChatMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace chat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_message_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
